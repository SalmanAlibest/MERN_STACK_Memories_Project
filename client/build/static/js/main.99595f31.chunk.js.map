{"version":3,"sources":["ui/screens/Posts/Post/styles.js","data/fetchposts/fetchpostsapi.js","data/fetchposts/fetchpostaction.js","utils/functions.js","ui/screens/Posts/Post/Post.jsx","data/fetchposts/fetchpostthunk.js","ui/screens/Posts/styles.js","ui/screens/Posts/Posts.jsx","ui/screens/Form/style.js","ui/screens/Form/Form.jsx","styles.js","ui/shared/Header.jsx","App.js","data/types.js","data/fetchposts/fetchpostreducers.js","data/fetchposts/updatepostreducers.js","data/rootReducer.js","data/index.js","index.js"],"names":["makeStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","overlay","top","left","color","overlay2","right","grid","details","margin","title","padding","cardActions","headers","fetchPost","a","axios","get","updatePost","id","FETCH_POST_LOADING_ACTION","FETCH_POST_SUCCESS_ACTION","FETCH_POST_ERROR_ACTION","UPDATE_POST_LOADING_ACTION","UPDATE_POST_SUCCESS_ACTION","UPDATE_POST_ERROR_ACTION","sendMemory","data","post","updateMemory","url","_id","console","log","patch","deleteMemory","delete","Post","classes","useStyles","dispatch","useDispatch","Card","className","CardMedia","image","selectedFile","Typography","variant","creator","moment","createdAt","fromNow","Button","style","size","onClick","type","updatePostApi","response","payload","fontSize","component","tags","map","tag","gutterBottom","CardContent","message","CardActions","theme","mainContainer","alignItems","smMargin","spacing","actionDiv","textAlign","Posts","setCurrentId","useSelector","state","status","useEffect","fetchPostApi","undefined","length","CircularProgress","Grid","container","item","xs","sm","md","root","paper","form","flexWrap","fileInput","width","buttonSubmit","marginBottom","buttonClear","borderColor","Form","updateData","useState","dataStatus","setStatus","postData","setPostData","handleSubmit","e","preventDefault","Paper","autoComplete","noValidate","onSubmit","TextField","name","label","fullWidth","value","onChange","target","multiline","rows","split","multiple","onDone","base64","appBar","heading","Header","Container","maxwidth","AppBar","align","Grow","in","justify","App","STATUSES","initialState","action","appReducer","combineReducers","rootReducer","storeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","MEMORY","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","applyMiddleware","thunk","subscribe","stringify","setItem","saveState","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.99595f31.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    backgroundBlendMode: 'darken',\r\n  },\r\n  border: {\r\n    border: 'solid',\r\n  },\r\n  fullHeightCard: {\r\n    height: '100%',\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    borderRadius: '15px',\r\n    height: '100%',\r\n    position: 'relative',\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    left: '20px',\r\n    color: 'white',\r\n  },\r\n  overlay2: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    right: '20px',\r\n    color: 'white',\r\n  },\r\n  grid: {\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    margin: '20px',\r\n  },\r\n  title: {\r\n    padding: '0 16px',\r\n  },\r\n  cardActions: {\r\n    padding: '0 16px 8px 16px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n});","import axios from \"axios\";\r\nconst url = \"http://localhost:5000/posts\";\r\nconst headers = {\r\n  \"Content-Type\": \"application/json\",\r\n  \"Access-Control-Allow-Origin\": \"*\",\r\n  \"Access-Control-Allow-Methods\": \"*\",\r\n  \"Access-Control-Max-Age\": \"1728000\",\r\n  \"Access-Control-Allow-Credentials\": \"true\",\r\n  \"Access-Control-Allow-Headers\":\r\n    \"Origin, X-Requested-With, Content-Type, Accept, Authorization\",\r\n};\r\n\r\nexport const fetchPost = async () =>\r\n  await axios.get(url, {\r\n    headers: headers,\r\n  });\r\n\r\nexport const updatePost = async (id) => {\r\n  return id;\r\n};\r\n","export const FETCH_POST_LOADING_ACTION = \"FETCH_POST_LOADING_ACTION\";\r\nexport const FETCH_POST_SUCCESS_ACTION = \"FETCH_POST_SUCCESS_ACTION\";\r\nexport const FETCH_POST_ERROR_ACTION = \"FETCH_POST_ERROR_ACTION\";\r\n\r\nexport const UPDATE_POST_LOADING_ACTION = \"UPDATE_POST_LOADING_ACTION\";\r\nexport const UPDATE_POST_SUCCESS_ACTION = \"UPDATE_POST_SUCCESS_ACTION\";\r\nexport const UPDATE_POST_ERROR_ACTION = \"UPDATE_POST_ERROR_ACTION\";\r\n\r\n\r\nexport const fetchPostLoadingAction = () => ({\r\n  type: FETCH_POST_LOADING_ACTION,\r\n});\r\nexport const fetchPostSuccessAction = (data) => ({\r\n  payload: data,\r\n  type: FETCH_POST_SUCCESS_ACTION,\r\n});\r\nexport const fetchPostErrorAction = () => ({\r\n  type: FETCH_POST_ERROR_ACTION,\r\n});\r\n\r\nexport const updatePostLoadingAction = () => ({\r\n  type: UPDATE_POST_LOADING_ACTION,\r\n});\r\nexport const updatePostSuccessAction = (updateData) => ({\r\n  payload: updateData,\r\n  type: UPDATE_POST_SUCCESS_ACTION,\r\n});\r\nexport const updatePostErrorAction = () => ({\r\n  type: UPDATE_POST_ERROR_ACTION,\r\n});\r\n","import axios from \"axios\";\r\nexport const sendMemory = async (data) => {\r\n  const url = \"http://localhost:5000/posts\";\r\n  const headers = {\r\n    \"Content-Type\": \"application/json\",\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    \"Access-Control-Allow-Methods\": \"*\",\r\n    \"Access-Control-Max-Age\": \"1728000\",\r\n    \"Access-Control-Allow-Credentials\": \"true\",\r\n    \"Access-Control-Allow-Headers\":\r\n      \"Origin, X-Requested-With, Content-Type, Accept, Authorization\",\r\n  };\r\n\r\n  await axios.post(url, data, {\r\n    headers: headers,\r\n  });\r\n};\r\nexport const updateMemory = async (data) => {\r\n  const url = `http://localhost:5000/posts/${data?._id}`;\r\n  const headers = {\r\n    \"Content-Type\": \"application/json\",\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    \"Access-Control-Allow-Methods\": \"*\",\r\n    \"Access-Control-Max-Age\": \"1728000\",\r\n    \"Access-Control-Allow-Credentials\": \"true\",\r\n    \"Access-Control-Allow-Headers\":\r\n      \"Origin, X-Requested-With, Content-Type, Accept, Authorization\",\r\n  };\r\n  console.log(data);\r\n  await axios.patch(url, data, {\r\n    headers: headers,\r\n  });\r\n};\r\n\r\nexport const deleteMemory = async (id) => {\r\n  const url = `http://localhost:5000/posts/${id}`;\r\n  const headers = {\r\n    \"Content-Type\": \"application/json\",\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    \"Access-Control-Allow-Methods\": \"*\",\r\n    \"Access-Control-Max-Age\": \"1728000\",\r\n    \"Access-Control-Allow-Credentials\": \"true\",\r\n    \"Access-Control-Allow-Headers\":\r\n      \"Origin, X-Requested-With, Content-Type, Accept, Authorization\",\r\n  };\r\n  await axios.delete(url, {\r\n    headers: headers,\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Button,\r\n  Typography,\r\n} from \"@material-ui/core/\";\r\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport moment from \"moment\";\r\nimport useStyles from \"./styles\";\r\nimport { updatePostThunk } from \"../../../../data/fetchposts/fetchpostthunk\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {deleteMemory} from \"../../../../utils/functions\"\r\nconst Post = ({ data }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Card className={classes?.card}>\r\n      <CardMedia\r\n        className={classes?.media}\r\n        image={\r\n          data?.selectedFile ||\r\n          \"https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png\"\r\n        }\r\n        title={data?.title}\r\n      />\r\n      <div className={classes.overlay}>\r\n        <Typography variant=\"h6\">{data.creator}</Typography>\r\n        <Typography variant=\"body2\">\r\n          {moment(data.createdAt).fromNow()}\r\n        </Typography>\r\n      </div>\r\n      <div className={classes.overlay2}>\r\n        <Button\r\n          style={{ color: \"white\" }}\r\n          size=\"small\"\r\n          onClick={() => {\r\n            dispatch(updatePostThunk(data));\r\n          }}\r\n        >\r\n          <MoreHorizIcon fontSize=\"default\" />\r\n        </Button>\r\n      </div>\r\n      <div className={classes.details}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">\r\n          {data.tags.map((tag) => `#${tag} `)}\r\n        </Typography>\r\n      </div>\r\n      <Typography\r\n        className={classes.title}\r\n        gutterBottom\r\n        variant=\"h5\"\r\n        component=\"h2\"\r\n      >\r\n        {data.title}\r\n      </Typography>\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {data.message}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions className={classes.cardActions}>\r\n        {/* <Button size=\"small\" color=\"primary\">\r\n          <ThumbUpAltIcon fontSize=\"small\" /> Like {data.likeCount}{\" \"}\r\n        </Button> */}\r\n        <Button\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            deleteMemory(data?._id);\r\n          }}\r\n        >\r\n          <DeleteIcon fontSize=\"small\" /> Delete\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import { reduxThunk } from \"redux-thunk\";\r\nimport { fetchPost as fetchPostApi } from \"./fetchpostsapi\";\r\nimport { updatePost as updatePostApi } from \"./fetchpostsapi\";\r\nimport {\r\n  fetchPostLoadingAction,\r\n  fetchPostSuccessAction,\r\n  fetchPostErrorAction,\r\n  updatePostLoadingAction,\r\n  updatePostSuccessAction,\r\n  updatePostErrorAction,\r\n} from \"./fetchpostaction\";\r\nexport const fetchPostThunk = () => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchPostLoadingAction());\r\n    const response = await fetchPostApi();\r\n\r\n    dispatch(fetchPostSuccessAction(response));\r\n  } catch (error) {\r\n    dispatch(fetchPostErrorAction());\r\n  }\r\n};\r\n\r\nexport const updatePostThunk = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch(updatePostLoadingAction());\r\n    const response = await updatePostApi(id);\r\n\r\n    dispatch(updatePostSuccessAction(response));\r\n  } catch (error) {\r\n    dispatch(updatePostErrorAction());\r\n  }\r\n};","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  mainContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  actionDiv: {\r\n    textAlign: 'center',\r\n  },\r\n}));","import React, { useEffect } from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport useStyles from \"./styles\";\r\nimport { CircularProgress, Grid } from \"@material-ui/core\";\r\n\r\nimport { fetchPostThunk } from \"../../../data/fetchposts/fetchpostthunk\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst Posts = ({ setCurrentId }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { data, status } = useSelector((state) => state.fetchPost);\r\n  useEffect(() => {\r\n    dispatch(fetchPostThunk());\r\n  }, []);\r\n\r\n  return data?.data?.length === undefined ? (\r\n    <CircularProgress />\r\n  ) : (\r\n    <Grid\r\n      className={classes.container}\r\n      container\r\n      alignItems=\"stretch\"\r\n      spacing={3}\r\n    >\r\n      {data?.data.map((post) => (\r\n        <Grid key={post?._id} item xs={12} sm={6} md={6}>\r\n          <Post data={post} />\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\nexport default Posts;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"center\",\r\n  },\r\n  fileInput: {\r\n    width: \"97%\",\r\n    margin: \"10px 0\",\r\n  },\r\n  buttonSubmit: {\r\n    marginBottom: 10,\r\n    backgroundColor: \"purple\",\r\n  },\r\n  buttonClear: {\r\n    borderColor: \"gray\",\r\n  },\r\n}));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FileBase from \"react-file-base64\";\r\n\r\nimport useStyles from \"./style\";\r\nimport { sendMemory, updateMemory } from \"../../../utils/functions\";\r\nconst Form = () => {\r\n  const { updateData, status } = useSelector((state) => state.updatePost);\r\n  const [dataStatus, setStatus] = useState(status);\r\n  const [postData, setPostData] = useState(\r\n    status !== \"ok\"\r\n      ? {\r\n          creator: \"\",\r\n          title: \"\",\r\n          message: \"\",\r\n          tags: \"\",\r\n          selectedFile: \"\",\r\n        }\r\n      : {\r\n          creator: updateData.creator,\r\n          title: updateData.title,\r\n          message: updateData.message,\r\n          tags: updateData.tags,\r\n          selectedFile: updateData.selectedFile,\r\n          _id: updateData?._id,\r\n        }\r\n  );\r\n  useEffect(() => {\r\n  }, []);\r\n  const classes = useStyles();\r\n  const clear = () => {\r\n    setPostData({\r\n      creator: \"\",\r\n      title: \"\",\r\n      message: \"\",\r\n      tags: \"\",\r\n      selectedFile: \"\",\r\n    });\r\n    setStatus(\"loading\");\r\n  };\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    dataStatus === undefined || dataStatus === \"loading\"\r\n      ? sendMemory(postData)\r\n      : updateMemory(postData);\r\n  };\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n        className={`${classes.root} ${classes.form}`}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Typography variant=\"h6\">Add Your Memory</Typography>\r\n        <TextField\r\n          name=\"creator\"\r\n          label=\"Creator\"\r\n          fullWidth\r\n          value={postData.creator}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, creator: e.target.value })\r\n          }\r\n        />\r\n        <TextField\r\n          name=\"title\"\r\n          label=\"Title\"\r\n          fullWidth\r\n          value={postData.title}\r\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\r\n        />\r\n        <TextField\r\n          name=\"message\"\r\n          label=\"Message\"\r\n          fullWidth\r\n          multiline\r\n          rows={4}\r\n          value={postData.message}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, message: e.target.value })\r\n          }\r\n        />\r\n        <TextField\r\n          name=\"tags\"\r\n          label=\"Tags (coma separated)\"\r\n          fullWidth\r\n          value={postData.tags}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, tags: e.target.value.split(\",\") })\r\n          }\r\n        />\r\n        <div className={classes.fileInput}>\r\n          <FileBase\r\n            type=\"file\"\r\n            multiple={false}\r\n            onDone={({ base64 }) =>\r\n              setPostData({ ...postData, selectedFile: base64 })\r\n            }\r\n          />\r\n        </div>\r\n        <Button\r\n          className={classes.buttonSubmit}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          type=\"submit\"\r\n          fullWidth\r\n        >\r\n          {dataStatus === undefined || dataStatus === \"loading\"\r\n            ? \"Submit\"\r\n            : \"Update\"}\r\n        </Button>\r\n        <Button\r\n          className={classes.buttonClear}\r\n          variant=\"contained\"\r\n          size=\"small\"\r\n          onClick={clear}\r\n          fullWidth\r\n        >\r\n          Clear\r\n        </Button>\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles(() => ({\r\n  appBar: {\r\n    margin: \"30px 0\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  heading: {\r\n    color: \"purple\",\r\n    fontSize: 40,\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Posts from \"../screens/Posts/Posts\";\r\nimport Form from \"../screens/Form/Form\";\r\nimport useStyles from \"../../styles\";\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container maxwidth=\"lg\">\r\n      <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n        <Typography className={classes.heading} variant=\"h2\" align=\"center\">\r\n          My Life's Memories\r\n        </Typography>\r\n      </AppBar>\r\n      <Grow in>\r\n        <Container>\r\n          <Grid\r\n            container\r\n            justify=\"space-between\"\r\n            alignItems=\"stretch\"\r\n            spacing={3}\r\n          >\r\n            <Grid item xs={12} sm={7}>\r\n              <Posts />\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <Form />\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Grow>\r\n    </Container>\r\n  );\r\n};\r\nexport default Header;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from \"react\";\r\nimport Header from \"./ui/shared/Header\";\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Header />\r\n    </div>\r\n  );\r\n};\r\nexport default App;\r\n","export const STATUSES = {\r\n  NEVER: \"never\",\r\n  OK: \"ok\",\r\n  LOADING: \"loading\",\r\n  ERROR: \"error\",\r\n};\r\n","import {\r\n  FETCH_POST_LOADING_ACTION,\r\n  FETCH_POST_SUCCESS_ACTION,\r\n  FETCH_POST_ERROR_ACTION,\r\n} from \"./fetchpostaction.js\";\r\nimport { STATUSES } from \"../types\";\r\nconst initialState = {\r\n  data: [],\r\n  state: STATUSES.NEVER,\r\n};\r\nconst fetchPost = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_POST_LOADING_ACTION:\r\n      return {\r\n        ...state,\r\n        status: STATUSES.LOADING,\r\n      };\r\n    case FETCH_POST_SUCCESS_ACTION:\r\n      return {\r\n        data: action.payload,\r\n        status: STATUSES.OK,\r\n      };\r\n    case FETCH_POST_ERROR_ACTION:\r\n      return {\r\n        data: null,\r\n        status: STATUSES.ERROR,\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\nexport default fetchPost;\r\n","import {\r\n    UPDATE_POST_LOADING_ACTION,\r\n    UPDATE_POST_SUCCESS_ACTION,\r\n    UPDATE_POST_ERROR_ACTION,\r\n  } from \"./fetchpostaction.js\";\r\n  import { STATUSES } from \"../types\";\r\n  const initialState = {\r\n    updateData: [],\r\n    state: STATUSES.NEVER,\r\n  };\r\n  const updatePost = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case UPDATE_POST_LOADING_ACTION:\r\n        return {\r\n          ...state,\r\n          status: STATUSES.LOADING,\r\n        };\r\n      case UPDATE_POST_SUCCESS_ACTION:\r\n        return {\r\n            updateData: action.payload,\r\n          status: STATUSES.OK,\r\n        };\r\n      case UPDATE_POST_ERROR_ACTION:\r\n        return {\r\n            updateData: null,\r\n          status: STATUSES.ERROR,\r\n        };\r\n      default:\r\n        return {\r\n          ...state,\r\n        };\r\n    }\r\n  };\r\n  export default updatePost;\r\n  ","import { combineReducers } from \"redux\";\r\n\r\nimport fetchPost from \"./fetchposts/fetchpostreducers\";\r\nimport updatePost from \"./fetchposts/updatepostreducers\";\r\n \r\nconst appReducer = combineReducers({\r\n  fetchPost,\r\n  updatePost\r\n});\r\nconst initialState = appReducer({}, {});\r\nconst rootReducer = (state, action) => {\r\n  return appReducer(state, action);\r\n};\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst MEMORY = \"MEMORY\";\r\n\r\n// Load State\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(MEMORY);\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\n// Save State\r\nexport const saveState = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(MEMORY, serializedState);\r\n   \r\n  } catch (err) {\r\n    console.log(\"Error saving data\");\r\n  }\r\n};\r\n\r\nconst persistedState = loadState();\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  persistedState,\r\n  storeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nstore.subscribe(() => {\r\n  saveState(store.getState());\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App.js\";\r\nimport store from \"./data/index\";\r\nimport { Provider } from \"react-redux\";\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}